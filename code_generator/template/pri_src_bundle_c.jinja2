#include "std_common.h"
#include "mod.h"
#include "mod_bundle.h"
#include "{{instance}}.h"

static std_uint_t bundle_service_id = 0;
static mod_iid_t {{module}}_iid = {{module|upper}}_IID;


STD_CALL std_rv_t bundle_create(std_uint_t bundle_id)
{
    bundle_service_id = bundle_id;

    return STD_RV_SUC;
}

STD_CALL std_rv_t bundle_destroy()
{
    bundle_service_id = 0;
    return STD_RV_SUC;
}


STD_CALL std_int_t bundle_start(IN const std_char_t *arg, IN const std_int_t arg_len)
{
    STD_ASSERT_RV(mod_register_instance_func(&{{module}}_iid, {{instance}}_create_instance) == STD_RV_SUC, STD_RV_ERR_FAIL);
    STD_ASSERT_RV(mod_bundle_IID_register(bundle_service_id, &{{module}}_iid) == STD_RV_SUC, STD_RV_ERR_FAIL);

    return STD_RV_SUC;
}

STD_CALL std_void_t bundle_stop()
{
    STD_ASSERT_RV(mod_unregister_instance_func(&{{module}}_iid) == STD_RV_SUC, );
    STD_ASSERT_RV(mod_bundle_IID_unregister(bundle_service_id) == STD_RV_SUC, );
}

